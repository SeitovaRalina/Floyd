import math

def printMatrix ( matrix ):
   for i in range ( len(matrix) ):
      for j in range ( len(matrix[i]) ):
          print ( "{:4d}".format(matrix[i][j]), end = "" )
      print ()

i = math.inf
g = [[0, 7, i, i, i, i],
     [i, 0, 2, i, 9, i],
     [i, i, 0, 1, 3, 11],
     [i, i, i, 0, i, 5],
     [13, i, i, 3, 0, 5],
     [i, i, i, i, i, 0]]

g = [[0, 8, 5],
     [3, 0, i],
     [i, 2, 0]]

g = [[0, 10, 18, 8, i, i],
     [10, 0, 16, 9, 21, i],
     [i, 16, 0, i, i, 15],
     [7, 9, i, 0, i, 12],
     [i, i, i, i, 0, 23],
     [i, i, 15, i, 23, 0]]
n = len(g)
p =[[i for i in range(n)] for j in range(n)]
for k in range(n):
    for i in range(n):
        for j in range(n):
            if g[i][j] > g[i][k] + g[k][j]:
                g[i][j] = g[i][k] + g[k][j]
                p[i][j] = k
printMatrix(g)
print('-'*30)
for i in range(n):
    for j in range(n):
        start = i
        end = j
        path = [start+1]
        while start != end:
            start = p[start][end]
            path.append(start+1)
        print(f'{i+1} -> {j+1} : путь = {path}, значение = {g[i][j]}')
#  0  10  18   8  31  20
#   10   0  16   9  21  21
#   26  16   0  25  37  15
#    7   9  25   0  30  12
#   64  54  38  63   0  23
#   41  31  15  40  23   0
# ------------------------------
# 1 -> 1 : путь = [1], значение = 0
# 1 -> 2 : путь = [1, 2], значение = 10
# 1 -> 3 : путь = [1, 3], значение = 18
# 1 -> 4 : путь = [1, 4], значение = 8
# 1 -> 5 : путь = [1, 2, 5], значение = 31
# 1 -> 6 : путь = [1, 4, 6], значение = 20
# 2 -> 1 : путь = [2, 1], значение = 10
# 2 -> 2 : путь = [2], значение = 0
# 2 -> 3 : путь = [2, 3], значение = 16
# 2 -> 4 : путь = [2, 4], значение = 9
# 2 -> 5 : путь = [2, 5], значение = 21
# 2 -> 6 : путь = [2, 4, 6], значение = 21
# 3 -> 1 : путь = [3, 2, 1], значение = 26
# 3 -> 2 : путь = [3, 2], значение = 16
# 3 -> 3 : путь = [3], значение = 0
# 3 -> 4 : путь = [3, 2, 4], значение = 25
# 3 -> 5 : путь = [3, 2, 5], значение = 37
# 3 -> 6 : путь = [3, 6], значение = 15
# 4 -> 1 : путь = [4, 1], значение = 7
# 4 -> 2 : путь = [4, 2], значение = 9
# 4 -> 3 : путь = [4, 1, 3], значение = 25
# 4 -> 4 : путь = [4], значение = 0
# 4 -> 5 : путь = [4, 2, 5], значение = 30
# 4 -> 6 : путь = [4, 6], значение = 12
# 5 -> 1 : путь = [5, 6, 3, 2, 1], значение = 64
# 5 -> 2 : путь = [5, 6, 3, 2], значение = 54
# 5 -> 3 : путь = [5, 6, 3], значение = 38
# 5 -> 4 : путь = [5, 6, 3, 2, 4], значение = 63
# 5 -> 5 : путь = [5], значение = 0
# 5 -> 6 : путь = [5, 6], значение = 23
# 6 -> 1 : путь = [6, 3, 2, 1], значение = 41
# 6 -> 2 : путь = [6, 3, 2], значение = 31
# 6 -> 3 : путь = [6, 3], значение = 15
# 6 -> 4 : путь = [6, 3, 2, 4], значение = 40
# 6 -> 5 : путь = [6, 5], значение = 23
# 6 -> 6 : путь = [6], значение = 0
